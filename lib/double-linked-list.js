// Generated by CoffeeScript 1.10.0
var LinkedList, Node;

Node = (function() {
  function Node(value, prev, next) {
    this.value = value;
    this.prev = prev || nil;
    this.next = next || nil;
  }

  return Node;

})();

LinkedList = (function() {
  var add, remove, search;

  function LinkedList() {
    this.head = nil;
    this.tail = nil;
  }

  add = function(value) {
    return this.head = Node["new"](value, this.head);
  };

  remove = function(value) {
    var current, head, tail;
    current = this.head;
    while (current) {
      if (current.value === value && current === this.head) {
        head = current.prev;
        current.prev.next = nil;
        return current;
      } else if (current.value === value && current === this.tail) {
        tail = current.next;
        current.next.prev = nil;
        return current;
      } else if (current.value === value) {
        current.prev.next = current.next;
        current.next.prev = current.prev;
        return current;
      } else {
        current = current.prev;
      }
    }
    return "no match found";
  };

  search = function(value) {
    var current;
    return current = this.head;
  };

  return LinkedList;

})();

module.exports = { Node : Node, LinkedList : LinkedList }
